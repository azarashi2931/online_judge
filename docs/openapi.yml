openapi: "3.0.0"

info:
  title: "Online judge API"
  version: "1.0.0"
  description: "Online judge's backend api reference"

servers:
  - url: "http://localhost:1323"

tags:
  - name: "users"
  - name: "problems"

paths:
  /register:
    post:
      summary: "Register a user"
      tags:
        - "users"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterData"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
  /login:
    post:
      summary: "Login a user"
      tags:
        - "users"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginData"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
  /logout:
    get:
      summary: "Logout a user"
      tags:
        - "users"
      security:
        - session: []
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogoutResponse"
  /problems:
    get:
      summary: "Get list of problems"
      tags:
        - "problems"
      security:
        - session: []
      parameters:
        - $ref: "#/components/parameters/Page"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProblemsListResponse"
  /problems/{id}:
    get:
      summary: "Get problem"
      tags:
        - "problems"
      security:
        - session: []
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProblemResponse"

components:
  securitySchemes:
    session:
      type: apiKey
      in: cookie
      name: session
  parameters:
    Page:
      name: page
      in: query
      schema:
        type: "integer"
    Id:
      name: id
      in: path
      schema:
        type: "integer"
  schemas:
    ResponseBase:
      required:
        - "success"
        - "error"
      properties:
        success:
          type: "boolean"
        error:
          type: "string"
    RegisterData:
      required:
        - "email"
        - "name"
        - "password"
      properties:
        email:
          type: "string"
        name:
          type: "string"
        password:
          type: "string"
    RegisterResponse:
      allOf:
        - $ref: "#/components/schemas/ResponseBase"
      properties:
        user:
          properties:
            id:
              type: "integer"
            name:
              type: "string"
    LoginData:
      required:
        - "name"
        - "password"
      properties:
        name:
          type: "string"
        password:
          type: "string"
    LoginResponse:
      allOf:
        - $ref: "#/components/schemas/ResponseBase"
      properties:
        user:
          properties:
            id:
              type: "integer"
            name:
              type: "string"
            role:
              type: "string"
    LogoutResponse:
      allOf:
        - $ref: "#/components/schemas/ResponseBase"
    GetProblemsListResponse:
      allOf:
        - $ref: "#/components/schemas/ResponseBase"
      properties:
        problems:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "integer"
              name:
                type: "string"
              type:
                type: "string"
              public:
                type: "boolean"
              time_limit:
                type: "integer"
              memory_limit:
                type: "integer"
    GetProblemResponse:
      allOf:
        - $ref: "#/components/schemas/ResponseBase"
      properties:
        problem:
          properties:
            id:
              type: "integer"
            name:
              type: "string"
            type:
              type: "string"
            public:
              type: "boolean"
            time_limit:
              type: "integer"
            memory_limit:
              type: "integer"
            statement:
              type: "string"
            constraints:
              type: "string"
            input_format:
              type: "string"
            output_format:
              type: "string"
